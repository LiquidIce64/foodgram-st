name: Main workflow

on:
  push:
    branches:
      - main

jobs:
  lint:
    name: Lint backend code with ruff
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip 
        pip install ruff==0.11.13
    - name: Lint with ruff
      run: python -m ruff check backend/

#  test_backend:
#    name: Run tests on backend
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Check out code
#      uses: actions/checkout@v4
#    - name: Set up Python
#      uses: actions/setup-python@v5
#      with:
#        python-version: "3.11"
#    - name: Install dependencies
#      run: |
#        cd backend/
#        python -m pip install --upgrade pip 
#        pip install -r requirements.txt --no-cache-dir
#    - name: Run tests
#      run: |
#        cd backend/
#        pytest

#  test_frontend:
#    name: Run tests on frontend
#    runs-on: ubuntu-latest
#
#    steps:
#    - name: Check out code
#      uses: actions/checkout@v4
#    - name: Set up nodeJS
#      uses: actions/setup-node@v4
#      with:
#        node-version: 21.7.1
#    - name: Install dependencies
#      run: |
#        cd frontend/
#        npm ci
#    - name: Run tests
#      run: |
#        cd frontend/
#        npm run test

  build_backend:
    name: Build backend and push to DockerHub
    runs-on: ubuntu-latest
    needs:
      - lint
#      - test_backend
#      - test_frontend
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./backend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_backend:latest

  build_frontend:
    name: Build frontend and push to DockerHub
    runs-on: ubuntu-latest
    needs:
      - lint
#      - test_backend
      - test_frontend
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker 
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Push to DockerHub
        uses: docker/build-push-action@v4
        with:
          context: ./frontend/
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram_frontend:latest

#  deploy:
#    runs-on: ubuntu-latest
#    needs:
#      - build_backend
#      - build_frontend
#    steps:
#      - name: Checkout repo
#        uses: actions/checkout@v3
#      - name: Copy docker-compose.yml via ssh
#        uses: appleboy/scp-action@master
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          passphrase: ${{ secrets.SSH_PASSPHRASE }}
#          source: "docker-compose.production.yml"
#          target: "/foodgram/"
#      - name: Executing remote ssh commands to deploy
#        uses: appleboy/ssh-action@master
#        env:
#          POSTGRES_USER=${{ secrets.POSTGRES_USER }}
#          POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
#        with:
#          host: ${{ secrets.HOST }}
#          username: ${{ secrets.USER }}
#          key: ${{ secrets.SSH_KEY }}
#          passphrase: ${{ secrets.SSH_PASSPHRASE }}
#          envs: POSTGRES_USER,POSTGRES_PASSWORD
#          script: |
#            cd /foodgram/
#            sudo docker compose -f docker-compose.production.yml pull
#            sudo docker compose -f docker-compose.production.yml down
#            sudo docker compose -f docker-compose.production.yml up -d
